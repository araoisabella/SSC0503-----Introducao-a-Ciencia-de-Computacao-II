Atividade avaliativa 10

Algoritmo Guloso

Data de entrega: 11/12/2023

Instruções:
Os trabalhos devem ser entregues no run.codes, na disciplina com código H2PY. O exercício será feito em grupo formado por 3 ou 4 alunos. Todos os integrantes devem submeter o mesmo código, que deve incluir um comentário com o nome e número USP de todos. Indique o grupo no link: https://forms.gle/7W2gSxioXCPNPxsU6 

Atividade:
De uma maneira bastante simplificada, pode-se dizer que o sequenciamento do DNA é realizado a partir da leitura de vários fragmentos (chamadas de reads), que são “montadas” posteriormente.

Nessa atividade vamos simular a montagem do DNA a partir das reads sequenciadas. Para isso, faça um programa em C que leia um número inteiro N que indica a quantidade de reads, seguido da leitura de cada uma das reads. Após isso, utilize algoritmo guloso para montar essas reads, gerando como resultado apenas uma sequência. A estratégia do algoritmo guloso deve considerar a melhor sobreposição (overlap) entre as reads em cada etapa.


Exemplo:

Considere o conjunto seguinte de reads:

READS = [atccat, ctgatc, ccatg]
Primeira iteração das permutções das reads e possíveis montagens:

atccat + ctgatc -> atccatctgatc -> overlap 0
atccat + ccatg -> atccatg -> overlap 4
ctgatc + atccat -> ctgatccat -> overlap 3
ctgatc + ccatg -> ctgatccatg -> overlap 1
ccatg + atccat -> ccatgatccat -> overlap 0
ccatg + ctgatc -> ccatgctgatc -> overlap 0
Portanto, o maior overlap é de tamanho 4. Remove-se as sequências envolvidas nesta montagem e insere a nova sequência montada na primeira posição da lista de reads, tendo como resultado:

READS = [atccatg, ctgatc]
Repete-se o procedimento com a nova lista gerada


Observações importantes:

As permutações devem seguir a ordem ilustrada. Por exemplo, em um vetor v = [0, 1, 2, 3], as permutações devem ser na seguinte ordem: (0, 1), (0, 2), (0, 3), (1, 0), (1, 2), (1, 3), (2, 0), (2, 1), (2, 3), (3, 0), (3, 1), (3, 2).
Se um mesmo overlap for identificado, considerar a primeira encontrada.
Caso não aconteça sobreposição (overlap = 0), deve-se realizar a montagem das reads mesmo assim, concatenando as reads sem sobreposição.
Sobreposições completas no interior das reads também devem ser consideradas. Por exemplo, a combinação das reads “tcg” e “actcgaac” tem overlap 3 e a sequência resultante é a própria sequência “actcgaac”, pois “tcg” é substring de “actcgaac”.

Exemplo de entrada e saída:

Entrada

Saída

3

atccat

ctgatc

ccatg

ctgatccatg




